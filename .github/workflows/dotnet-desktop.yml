name: .NET CI

on: [push, pull_request]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 7.0.x

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.fsproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore

      # Nouveau pas pour vérifier les vulnérabilités
      - name: Vérifier les dépendances vulnérables
        shell : bash
        run: |
          # On liste toutes les vulnérabilités (inclut aussi les transitives)
          dotnet list package --vulnerable --include-transitive > vuln.txt

          # Si on trouve la section "The following vulnerable packages were found"
          if grep -q "Following vulnerable packages were found" vuln.txt; then
            echo "❌ Des dépendances vulnérables ont été détectées :"
            cat vuln.txt
            exit 1
          else
            echo "✅ Aucune dépendance vulnérable détectée."
          fi

      - name: Run tests with emoji feedback
        shell: bash
        run: |
          set +e
          # Exécute les tests et capture la sortie
          output=$(dotnet test 2>&1)
          exit_code=$?

          # Choix de l'emoji et du message selon le code de retour
          if [ $exit_code -eq 0 ]; then
            emoji="☀️"
            message="Tous les tests ont réussi !"
          else
            emoji="⛈️"
            message="Des tests ont échoué !"

            # À chaque échec, avec probabilité ~50%, un message alien
            if [ $((RANDOM % 2)) -eq 0 ]; then
              echo "👽 Humain, ton code est incompréhensible pour ma civilisation. Peux-tu ajouter des tests ?"
            fi
          fi

          # Affiche emoji + message
          echo "${emoji}  ${message}"

          # Vérifie qu'il y ait bien au moins un des deux emoji
          if ! echo "${emoji}  ${message}" | grep -q '[☀️⛈️]'; then
            echo "⚠️  Aucun emoji détecté dans la sortie !"
            exit 1
          fi

          # Réaffiche les logs de dotnet test (optionnel)
          echo "$output"

          # Fait échouer le job si les tests ont échoué
          exit $exit_code